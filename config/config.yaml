# `policy` is the root object for the policy and bundle commands. Any
# parent policy options provided here can be overridden by repo
# specific/ branch specific options.

policy:
  # Groups collect repos that have some common feature This group is
  # contains the metadata required to manage repos that are services
  services:
    # features act as flags whose presence/absence can be used to render
    # a common set of features across branch(es) For eg: there are some
    # branches that support el/7, and some that doesn't - to render el/7
    # support on these branches, add `el7` as a feature of these
    # branches and write the template conditions accordingly to render
    # the templates with el7 support based on the presence of this flag
    features:
      - releng
    # deletedfiles are files that should not exist, usually the
    # detritutus of failed experiments or featured than have been
    # superceded, they will be removed if policy sync encounters them
    deletedfiles:
      - .github/workflows/del-env.yml
      - .github/workflows/sync-automation.yml
      - .github/workflows/update-config-docs.yml
      - .github/workflows/api-tests.yml
      - .github/workflows/pac.yml
      - .github/workflows/e2e_api_tests.yml
      - repo-policy
      - bin/dist_push.sh
      - bin/dist_build.sh
      - bin/integration_build.sh
      - ci/Dockerfile.slim
      - ci/aws
      - ci/image
    # baseimage what the container images are based on. It needs to be a
    # debian compatible distro as the Dockerfile assumes apt-get
    baseimage: debian:bullseye-slim
    # Repo specific policies start here->
    repos:
      # Repo specific policy for `tyk` starts here->
      tyk:
        # Description for the repo - this will be used as description for
        # deb/rpm packages, docker images etc.
        description: >-
          Tyk Open Source API Gateway written in Go, supporting REST, GraphQL, TCP and gRPC protocols
        # The packagecloud repo name for this git repo.
        pcrepo: tyk-gateway
        # The dockerhub image name for this repo. in the form of repo/image
        dhrepo: tykio/tyk-gateway
        # Cloudsmith image name for this repo.
        csrepo: docker.tyk.io/tyk-gateway/tyk-gateway
        # (eg: TykTechnologies/devops) that will be automatically set as
        # It also is used while generating dependabot templates to set
        # The name for the deb/rpm packages generated by release workflow.
        packagename: tyk-gateway
        # The name of the binary generated after the build.
        binary: tyk
        # `protected` specifies repo specific protected branches - this gets
        # appended to the common protected branches if any.
        # Ports exposed by the docker images built for this repo/
        exposeports: "8080"
        # Specifies whether this repo had to be built with cgo
        # enabled. This will also generate separate packages for
        # older glibc versions (el7 and non-el7 release workflows)
        cgo: true
        # The version that's used for upgrade tests. This version
        # will be installed first and will then be upgraded with the
        # recently generated packages. Make sure that this is a version
        # that has candidate packages for all our supported OSes and archs.
        upgradefromver: 3.0.8
        # The default config file used by the application.
        configfile: tyk.conf
        # The go package which contains the `VERSION` string for this REPO.
        versionpackage: github.com/TykTechnologies/tyk/internal/build
        # Different branches could have different policy as older branches
        # could be on a different releaese workflow. To override any branch
        # policy for a specific branch, they could be specified here, under
        # the respective branches.
        # Branch specific policy for different branches starts here.->
        branches:
          master:
            # The build environment used for this repo. Right now, this value
            # is used for selecting the appropriate golang-cross image
            # used for building the binary, packages and docker images.
            buildenv: 1.21-bullseye
            baseimage: debian:bookworm-slim
            features:
              - s390x
          release-4-lts:
            features:
              - el7
              - plugin-compiler-fix-vendor
            buildenv: 1.15
          release-5-lts:
            buildenv: 1.16
            features:
              - el7
              - plugin-compiler-fix-vendor

      tyk-analytics:
        description: >-
          Dashboard for the Tyk API Gateway
        pcrepo: tyk-dashboard
        dhrepo: tykio/tyk-dashboard
        csrepo: docker.tyk.io/tyk-dashboard/tyk-dashboard
        exposeports: "3000 5000"
        binary: tyk-analytics
        packagename: tyk-dashboard
        cgo: true
        upgradefromver: 3.0.9
        configfile: tyk_analytics.conf
        versionpackage: github.com/TykTechnologies/tyk-analytics/dashboard/internal/build
        sourcebranch: master          
        buildenv: 1.21-bullseye
        features:
          - el7
        branches:
          master:
            baseimage: debian:bookworm-slim
            buildenv: 1.21-bullseye
            features:
              - s390x
          release-5-lts:
            buildenv: 1.16
          release-4-lts:
            buildenv: 1.16

      tyk-identity-broker:
        description: >-
          Tyk Authentication Proxy for third-party login
        pcrepo: tyk-identity-broker
        dhrepo: tykio/tyk-identity-broker
        csrepo: docker.tyk.io/tyk-identity-broker/tyk-identity-broker
        exposeports: 80
        binary: tyk-identity-broker
        packagename: tyk-identity-broker
        cgo: false
        upgradefromver: 1.1.0
        configfile: tib.conf
        versionpackage: github.com/TykTechnologies/tyk-identity-broker/main
        buildenv: 1.21-bullseye
        branches:
          master:

      tyk-sink:
        description: >-
         Tyk RPC server backend (bridge)
        pcrepo: tyk-mdcb
        dhrepo: tykio/tyk-mdcb-docker
        csrepo: docker.tyk.io/tyk-sink/tyk-sink
        exposeports: 80
        binary: tyk-sink
        packagename: tyk-sink
        cgo: false
        upgradefromver: 1.8.2
        configfile: tyk_sink.conf
        versionpackage: github.com/TykTechnologies/tyk-sink/main
        sourcebranch: master        
        buildenv: 1.21-bullseye
        branches:
          master:
            features:
              - s390x

      portal:
        description: >-
          Developer portal for the Tyk API Gateway
        pcrepo: portal
        dhrepo: tykio/portal
        exposeports: 80
        binary: dev-portal
        packagename: portal
        cgo: true
        upgradefromver: 1.0.0
        configfile: portal.conf
        versionpackage: github.com/TykTechnologies/portal/model/version
        baseimage: debian:trixie-slim
        buildenv: 1.19-bullseye
        branches:
          master:

      tyk-pump:
        description: >-
          Tyk Analytics Pump to move analytics data from Redis to any supported back end (multiple back ends can be written to at once).
        pcrepo: tyk-pump
        dhrepo: tykio/tyk-pump-docker-pub
        csrepo: docker.tyk.io/tyk-pump/tyk-pump
        exposeports: "80"
        binary: tyk-pump
        packagename: tyk-pump
        cgo: false
        upgradefromver: 1.6.0
        configfile: pump.conf
        versionpackage: github.com/TykTechnologies/tyk-pump/pumps
        sourcebranch: master
        buildenv: 1.21-bullseye
        branches:
          master:
            features:
              - s390x
          release-1.9:
            feature:
              - s390x
