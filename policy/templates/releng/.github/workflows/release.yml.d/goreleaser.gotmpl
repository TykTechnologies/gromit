{{ define "goreleaser" }}
  goreleaser:
    name: '{{`${{ matrix.golang_cross }}`}}'
    runs-on: ubuntu-latest
    container: 'tykio/golang-cross:{{`${{ matrix.golang_cross }}`}}'
    permissions:
      id-token: write   # AWS OIDC JWT
      contents: read    # actions/checkout
    strategy:
      fail-fast: false
      matrix:
        golang_cross:
          - {{ .Branchvals.Buildenv }}
  {{- if has "el7"  .Branchvals.Features }}
          {{ if eq .Branch "release-5-lts" -}}
          - 1.16-el7
          {{ else if eq .Branch "release-4-lts" -}}
          - 1.15-el7
          {{ else if eq .Branch "master" -}}
          - {{ .Branchvals.Buildenv }}-pgo
          {{- end -}}
  {{- end }} {{/* el7 */}}
        include:
  {{- if has "el7" .Branchvals.Features }}
          - golang_cross: {{ if eq .Branch "release-5-lts"}}1.16-el7{{ else if eq .Branch "release-4-lts" }}1.15-el7{{ else if eq .Branch "master" }}1.19-bullseye-pgo{{ end }}
            goreleaser: 'ci/goreleaser/goreleaser-el7.yml'
            rpmvers: 'el/7 amazon/2'
            debvers: 'ubuntu/xenial ubuntu/bionic debian/jessie'
            cgo: 0
  {{- end }} {{/* el7 */}}
          - golang_cross: {{ .Branchvals.Buildenv }}
            goreleaser: 'ci/goreleaser/goreleaser.yml'
            cgo: {{ if .Branchvals.Cgo }} 1 {{ else }} 0 {{end}}
  {{- if has "el7" .Branchvals.Features }}
            rpmvers: 'el/8 el/9 amazon/2023'
            debvers: 'ubuntu/bionic ubuntu/focal ubuntu/jammy debian/buster debian/bullseye debian/bookworm'
  {{- else }} {{/* debvers and rpmvers for repos that do not need special el7 support */}}
            rpmvers: 'el/7 el/8 el/9 amazon/2 amazon/2023'
            debvers: 'ubuntu/xenial ubuntu/bionic ubuntu/focal ubuntu/jammy debian/jessie debian/buster debian/bullseye debian/bookworm'
  {{- end }} {{/* el7 */}}
    outputs:
      tags: {{`${{ steps.metadata.outputs.tags }}`}}

    steps:
      - name: Fix private module deps
        env:
          TOKEN: '{{`${{ secrets.ORG_GH_TOKEN }}`}}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Checkout of {{ .Name }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
  {{- if eq .Name "tyk-analytics" }}
          token: {{`${{ secrets.ORG_GH_TOKEN }}`}}
          submodules: true
  {{- end }}

      - name: "Add Git safe.directory"
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v2
        with:
          username: {{`${{ secrets.DOCKER_USERNAME }}`}}
          password: {{`${{ secrets.DOCKER_PASSWORD }}`}}

  {{- if .CSRepo }}
      - name: Login to Cloudsmith
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v2
        with:
          registry: docker.tyk.io
          username: {{`${{ secrets.CLOUDSMITH_USERNAME }}`}}
          password: {{`${{ secrets.CLOUDSMITH_API_KEY }}`}}
  {{- end }}

      - name: Unlock agent
        env:
          NFPM_STD_PASSPHRASE: {{`${{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          GPG_FINGERPRINT: 12B5D62C28F57592D1575BD51ED14C59E37DAC20
          PKG_SIGNING_KEY: {{`${{ secrets.SIGNING_KEY }}`}}
        run:
          ci/bin/unlock-agent.sh

  {{ if and (eq .Name "tyk") (has "plugin-compiler-fix-vendor" .Branchvals.Features) -}}
      - name: Fix vendor
        run: |
          mkdir -p /go/src
          go mod tidy
          go mod vendor
          cp -r -f vendor/* /go/src
          mkdir -p /go/src/github.com/TykTechnologies/tyk
          cp -r ./* /go/src/github.com/TykTechnologies/tyk
          find /go/src -name vendor | xargs --no-run-if-empty -d'\n' rm -rf
          rm -rf vendor
  {{- end }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: {{`${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}`}}
          restore-keys: |
            {{`${{ runner.os }}-go-`}}

      - uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean -f {{`${{ matrix.goreleaser }}`}} {{`${{ !startsWith(github.ref, 'refs/tags/') && ' --snapshot' || '' }}`}}
        env:
          GITHUB_TOKEN: {{`${{ secrets.GITHUB_TOKEN }}`}}
          CGO_ENABLED: {{`${{ matrix.cgo }}`}} 
  {{- if and (eq .Name "tyk") (or (eq .Branch "release-5-lts" ) (eq .Branch "release-4-lts" )) }}
          GO111MODULE: off
  {{- end }}
          NFPM_STD_PASSPHRASE: {{`${{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          NFPM_PAYG_PASSPHRASE: {{`${{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          GPG_FINGERPRINT: 12B5D62C28F57592D1575BD51ED14C59E37DAC20
          PKG_SIGNING_KEY: {{`${{ secrets.SIGNING_KEY }}`}}
          GOLANG_CROSS: {{`${{ matrix.golang_cross }}`}}
          DEBVERS: {{`${{ matrix.debvers }}`}}
          RPMVERS: {{`${{ matrix.rpmvers }}`}}
          PACKAGECLOUD_TOKEN: {{`${{ secrets.PACKAGECLOUD_TOKEN }}`}}
  {{- if eq .Name "tyk" }}
          DOCKER_CLI_EXPERIMENTAL: "enabled"
  {{- end }}
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1
          # Don't mask to pass it across job boundaries
          mask-aws-account-id: false

      - uses: aws-actions/amazon-ecr-login@v1
        id: ecr
        with:
          mask-password: 'true'

      - name: Docker metadata for CI
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: {{`${{ steps.ecr.outputs.registry }}`}}/{{ .Name }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=semver,pattern=v{{`{{major}}`}}.{{`{{minor}}`}},prefix=v
            type=semver,pattern=v{{`{{version}}`}},prefix=v

      - name: CI push
        shell: bash
        env:
          t: {{`${{ steps.metadata.outputs.tags }}`}}
          build_tag: {{`${{ startswith(github.ref, 'refs/tags') && github.ref_name || 'v0.0.0' }}`}}
        run: |
          set +e
          IFS=$'\n' tags=($t)
          for tag in "${tags[@]}"; do
             for arch in amd64 arm64; do
                 docker tag {{ .DHRepo }}:${build_tag}-${arch} ${tag}-${arch} && docker push ${tag}-${arch}
             done
             docker manifest create ${tag} ${tag}-amd64 ${tag}-arm64 && docker manifest push ${tag}
          done

      - uses: actions/upload-artifact@v3
        with:
          name: deb
          retention-days: 1
          path: |
            dist/*.deb
            !dist/*PAYG*.deb

      - uses: actions/upload-artifact@v3
        with:
          name: rpm
          retention-days: 1
          path: |
            dist/*.rpm
            !dist/*PAYG*.rpm
  {{- if eq .Name "tyk-analytics" }}
      - uses: actions/upload-artifact@v3
        with:
          name: payg
          retention-days: 1
          path: dist/*PAYG*
  {{- end }}
{{- end }}{{/* End of definition */}}
