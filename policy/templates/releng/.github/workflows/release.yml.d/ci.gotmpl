{{ define "ci" }}
  ci:
    needs:
      - goreleaser
    runs-on: ubuntu-latest

    steps:
      - name: Shallow checkout of {{ .Name }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
  {{- if eq .Name "tyk-analytics" }}
          token: ${{`{{ secrets.ORG_GH_TOKEN }}`}}
          submodules: true
  {{- end }}

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/download-artifact@v3
        with:
          name: deb

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: 754489498669.dkr.ecr.eu-central-1.amazonaws.com/tyk-automated-tests
          tags: |
              type=semver,pattern=v{{version}}
              type=semver,pattern=v{{major}}.{{minor}}
              type=semver,pattern=v{{major}}

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: CI build
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "."
          file: ci/Dockerfile.std
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{`{{ steps.login-ecr.outputs.registry }}`}}/{{ .Name }}:${{`{{ needs.goreleaser.outputs.tag }}`}}
            ${{`{{ steps.login-ecr.outputs.registry }}`}}/{{ .Name }}:${{`{{ github.sha }}`}}

      - name: Tell gromit about new build
        id: gromit
        run: |
          # Remember to remove the true when TD-626 is fixed
          curl -fsSL -H "Authorization: ${{`{{secrets.GROMIT_TOKEN}}`}}" 'https://domu-kun.cloud.tyk.io/gromit/newbuild' \
                 -X POST -d '{ "repo": "${{`{{ github.repository}}`}}", "ref": "${{`{{ github.ref }}`}}", "sha": "${{`{{ github.sha }}`}}" }' || true

      - name: Tell integration channel
        if: ${{`{{ failure() }}`}}
        run: |
          colour=bad
          pretext=":boom: Could not add new build $${{`{{ github.ref }} from ${{ github.repository }}`}} to CD. Please review this run and correct it if needed. See https://github.com/TykTechnologies/tyk-ci/wiki/IntegrationEnvironment for what this is about."
          curl https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack -o /tmp/slack && chmod +x /tmp/slack
          /tmp/slack chat send \
          --actions '{"type": "button", "style": "primary", "text": "See log", "url": "https://github.com/${{`{{ github.repository }}/actions/runs/${{ github.run_id }}`}}"}' \
          --author 'Bender' \
          --author-icon 'https://hcoop.net/~alephnull/bender/bender-arms.jpg' \
          --author-link 'https://github.com/TykTechnologies/tyk-ci' \
          --channel '#service-integration' \
          --color $colour \
          --fields '{"title": "Repo", "value": "${{`{{ github.repository }}`}}", "short": false}' \
          --footer 'github-actions' \
          --footer-icon 'https://assets-cdn.github.com/images/modules/logos_page/Octocat.png' \
          --image 'https://assets-cdn.github.com/images/modules/logos_page/Octocat.png' \
          --pretext "$pretext" \
          --text 'Commit message: ${{`{{ github.event.head_commit.message }}`}}' \
          --title 'Failed to add new build for CD' \
          --title-link 'https://github.com/${{`{{ github.repository }}/actions/runs/${{ github.run_id }}`}}'
{{ end }}
