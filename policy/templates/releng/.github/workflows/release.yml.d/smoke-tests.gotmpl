{{ define "smoke-tests" }}

{{- $pcrepo :=  $.PCRepo }}
{{if eq .Name "tyk-sink" }}
  {{ $pcrepo =  print $.PCRepo "-stable" }}
{{ end }}
  upgrade-deb:
    services:
      httpbin.org:
        image: kennethreitz/httpbin
    runs-on: ubuntu-latest
    needs: goreleaser
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
        distro:
        {{- if (has "el7" .Branchvals.Features) }}
          - ubuntu:xenial
        {{- end }}
          - ubuntu:bionic
          - ubuntu:focal
          - ubuntu:jammy
          - debian:bullseye
          - debian:bookworm

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v3
        with:
          name: deb

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: generate dockerfile
        run: |
          echo 'FROM {{`${{ matrix.distro }}`}}
          ARG TARGETARCH
          COPY {{ .PackageName }}*_${TARGETARCH}.deb /{{ .PackageName }}.deb
          RUN apt-get update && apt-get install -y curl
          RUN curl -fsSL https://packagecloud.io/install/repositories/tyk/{{ $pcrepo }}/script.deb.sh | bash && apt-get install -y {{ .PackageName }}={{ .Branchvals.UpgradeFromVer }}
          RUN dpkg -i {{ .PackageName }}.deb
  {{- if eq .Name "tyk" }}
          RUN apt-get install -y jq
          RUN /opt/tyk-gateway/install/setup.sh --listenport=8080 --redishost=localhost --redisport=6379 --domain=""
          COPY ci/tests/api-functionality/api_test.sh /
          COPY ci/tests/api-functionality/pkg_test.sh /
          COPY ci/tests/api-functionality/data/api.json /opt/tyk-gateway/apps/
          CMD [ "/pkg_test.sh" ]
  {{- end }}
          ' > Dockerfile

      - name: install on {{`${{ matrix.distro }}`}}
        uses: docker/build-push-action@v5
        with:
          context: "."
          platforms: linux/{{`${{ matrix.arch }}`}}
          file: Dockerfile
          push: false
  {{- if eq .Name "tyk" }}
          tags: test-{{`${{ matrix.distro }}-${{ matrix.arch }}`}}
          load: true

      - name: Test the built container image with api functionality test.
        run: |
          docker run --network {{`${{ job.container.network }}`}} --rm test-{{`${{ matrix.distro }}-${{ matrix.arch }}`}}
  {{- end }}

  upgrade-rpm:
    services:
      httpbin.org:
        image: kennethreitz/httpbin
    needs: goreleaser
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - amazonlinux:2023
          - registry.access.redhat.com/ubi8/ubi
          - registry.access.redhat.com/ubi9/ubi
        {{- if (has "el7" .Branchvals.Features) }}
          - amazonlinux:2
          - registry.access.redhat.com/ubi7/ubi
        {{- end }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v3
        with:
          name: rpm

      - uses: docker/setup-buildx-action@v3

      - name: generate dockerfile
        run: |
          echo 'FROM {{`${{ matrix.distro }}`}}
          COPY {{ .PackageName }}*.x86_64.rpm /{{ .PackageName }}.rpm
          RUN command -v curl || yum install -y curl
          RUN command -v useradd || yum install -y shadow-utils
          RUN curl -fsSL https://packagecloud.io/install/repositories/tyk/{{ $pcrepo }}/script.rpm.sh | bash && yum install -y {{ .PackageName }}-{{ .Branchvals.UpgradeFromVer }}-1
          RUN curl https://keyserver.tyk.io/tyk.io.rpm.signing.key.2020 -o {{ $pcrepo }}.key && rpm --import {{ $pcrepo }}.key
          RUN rpm --checksig {{ .PackageName }}.rpm
          RUN rpm -Uvh --force {{ .PackageName }}.rpm
  {{- if eq .Name "tyk" }}
          RUN curl -fSL https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 --output /usr/local/bin/jq && chmod a+x /usr/local/bin/jq
          RUN /opt/tyk-gateway/install/setup.sh --listenport=8080 --redishost=localhost --redisport=6379 --domain=""
          COPY ci/tests/api-functionality/data/api.json /opt/tyk-gateway/apps/
          COPY ci/tests/api-functionality/api_test.sh /
          COPY ci/tests/api-functionality/pkg_test.sh /
          CMD [ "/pkg_test.sh" ]
  {{- end }}
          ' > Dockerfile

      - name: install on {{`${{ matrix.distro }}`}}
        uses: docker/build-push-action@v5
        with:
          context: "."
          file: Dockerfile
          push: false
  {{- if eq .Name "tyk" }}
          tags: test-{{`${{ matrix.distro }}`}}
          load: true

      - name: Test the built container image with api functionality test.
        run: |
          docker run --network {{`${{ job.container.network }}`}} --rm test-{{`${{ matrix.distro }}`}}
  {{ end }}

  {{- if and (eq .Name "tyk") (eq .Branch "master") }}
  release-tests:
    needs:
      - goreleaser
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    uses: ./.github/workflows/release-tests.yml
    secrets: inherit
  {{ end }} {{/* release-tests */}}
{{ end }} {{/* smoke-tests */}}
