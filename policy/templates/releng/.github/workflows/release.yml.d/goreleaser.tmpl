{{ define "goreleaser" }}
  goreleaser:
    name: '${{`{{ matrix.golang_cross }}`}}'
    runs-on: ubuntu-latest
    container: 'tykio/golang-cross:${{`{{ matrix.golang_cross }}`}}'
    strategy:
      fail-fast: false
      matrix:
  {{- if .Branchvals.Cgo }}
        golang_cross: [ 1.16, 1.16-el7 ]
  {{- else }}
        golang_cross: [ 1.16 ]
  {{- end }}
        include:
  {{- if .Branchvals.Cgo }}
          - golang_cross: 1.16-el7
            goreleaser: 'ci/goreleaser/goreleaser-el7.yml'
            rpmvers: 'el/7'
            debvers: 'ubuntu/xenial ubuntu/bionic debian/jessie'
  {{- end }}
          - golang_cross: 1.16
            goreleaser: 'ci/goreleaser/goreleaser.yml'
  {{- if .Branchvals.Cgo }}
            rpmvers: 'el/8'
            debvers: 'ubuntu/focal debian/buster debian/bullseye'
  {{- else }}
            rpmvers: 'el/7 el/8'
            debvers: 'ubuntu/xenial ubuntu/bionic debian/jessie ubuntu/focal debian/buster debian/bullseye'
  {{- end }}
    outputs:
      tag: ${{`{{ steps.targets.outputs.tag }}`}}

    steps:
      - name: Fix private module deps
        env:
          TOKEN: '${{`{{ secrets.ORG_GH_TOKEN }}`}}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Checkout of {{ .Name }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
  {{- if eq .Name "tyk-analytics" }}
          token: ${{`{{ secrets.ORG_GH_TOKEN }}`}}
          submodules: true
  {{- end }}
      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v2
        with:
          username: ${{`{{ secrets.DOCKER_USERNAME }}`}}
          password: ${{`{{ secrets.DOCKER_PASSWORD }}`}}

      - name: Login to Cloudsmith
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v2
        with:
          registry: docker.tyk.io
          username: ${{`{{ secrets.CLOUDSMITH_USERNAME }}`}}
          password: ${{`{{ secrets.CLOUDSMITH_API_KEY }}`}}

      - name: Unlock agent and set tag
        id: targets
        shell: bash
        env:
          NFPM_STD_PASSPHRASE: ${{`{{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          GPG_FINGERPRINT: 12B5D62C28F57592D1575BD51ED14C59E37DAC20
          PKG_SIGNING_KEY: ${{`{{ secrets.SIGNING_KEY }}`}}
        run: |
          ci/bin/unlock-agent.sh
          current_tag=${GITHUB_REF##*/}
          echo "::set-output name=tag::${current_tag}"

      - name: Delete old release assets
        if: startsWith(github.ref, 'refs/tags')
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{`{{ github.token }}`}}
          tag: ${{`{{ github.ref }}`}}
          fail-if-no-assets: false
          fail-if-no-release: false
          assets: |
            *.deb
            *.rpm
            *.tar.gz
            *.txt.sig
            *.txt

  {{- if eq .Name "tyk" }}
      - name: Fix vendor
        run: |
          export GOPATH=/go
          mkdir -p /go/src || true
          whereis go
          go mod tidy
          go mod vendor
          echo "Moving vendor"
          cp -r -f vendor/* $GOPATH/src
          rm -rf vendor
          mkdir -p /go/src/github.com/TykTechnologies/tyk
          cp -r ./* /go/src/github.com/TykTechnologies/tyk
  {{- end }}

      - uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist -f ${{`{{ matrix.goreleaser }}`}}
        env:
          GITHUB_TOKEN: ${{`{{ secrets.GITHUB_TOKEN }}`}}
          CGO_ENABLED: {{ if .Branchvals.Cgo }}1{{ else }}0{{ end }}
  {{- if eq .Name "tyk" }}
          GO111MODULE: off
  {{- end }}
          NFPM_STD_PASSPHRASE: ${{`{{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          NFPM_PAYG_PASSPHRASE: ${{`{{ secrets.SIGNING_KEY_PASSPHRASE }}`}}
          GPG_FINGERPRINT: 12B5D62C28F57592D1575BD51ED14C59E37DAC20
          PKG_SIGNING_KEY: ${{`{{ secrets.SIGNING_KEY }}`}}
          GOLANG_CROSS: ${{`{{ matrix.golang_cross }}`}}
          DEBVERS: ${{`{{ matrix.debvers }}`}}
          RPMVERS: ${{`{{ matrix.rpmvers }}`}}
          PACKAGECLOUD_TOKEN: ${{`{{ secrets.PACKAGECLOUD_TOKEN }}`}}

      - uses: actions/upload-artifact@v3
        with:
          name: deb
          retention-days: 1
          path: |
            dist/*.deb
            !dist/*PAYG*.deb

      - uses: actions/upload-artifact@v3
        with:
          name: rpm
          retention-days: 1
          path: |
            dist/*.rpm
            !dist/*PAYG*.rpm
  {{- if eq .Name "tyk-analytics" }}
      - uses: actions/upload-artifact@v3
        with:
          name: payg
          retention-days: 1
          path: dist/*PAYG*
  {{- end }}
{{- end }}{{/* End of definition */}}
