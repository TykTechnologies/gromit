# Generated by: gromit policy
# Generated on: {{ .Timestamp }}

# Distribution channels covered by this workflow
# - Ubuntu and Debian
# - RHEL and AL
# - docker hub
# - devenv ECR
# - Cloudsmith

name: Release

on:
  # Trigger release every monday at midnight for master CI images
  schedule:
    - cron: "0 0 * * 1"   
  pull_request:
  push:
    branches:
      - master
      - release-**
    tags:
      - 'v*'

env:
  GOPRIVATE: github.com/TykTechnologies
  
jobs:
{{- template "goreleaser" . }}
{{- if or (eq .Name "tyk") (eq .Name "tyk-analytics") (eq .Name "tyk-sink") (eq .Name "tyk-pump") }}
  test-controller-api:
    needs: goreleaser
    runs-on: ubuntu-latest
    container: tykio/gromit:v1.7
    outputs:
      conf: ${{ steps.params.outputs.api_conf }}
      db: ${{ steps.params.outputs.api_db }}
      pump: {{`${{ steps.params.outputs.pump }}`}}
      sink: {{`${{ steps.params.outputs.sink }}`}}
      gd_tag: {{`${{ steps.params.outputs.gd_tag }}`}}
      versions: {{`${{ steps.params.outputs.versions }}`}}

    steps:
      - name: set params
        id: params
        env:
          REPO: {{`${{ github.repository }}`}}
          # Cover pull_request_target too
          BASE_REF: {{`${{startsWith(github.event_name, 'pull_request') && github.base_ref || github.ref}}`}}
          TAGS: {{`${{ needs.goreleaser.outputs.tags }}`}}
          IS_PR: {{`${{startsWith(github.event_name, 'pull_request') && 'yes' }}`}}
          IS_TAG: {{`${{startsWith(github.ref, 'refs/tags') && 'yes' }}`}}
          JOB: api
        run: gromit policy controller --loglevel debug | tee -a "$GITHUB_OUTPUT"

{{- if eq .Name "tyk-analytics" }}
  test-controller-ui:
    needs: goreleaser
    runs-on: ubuntu-latest
    container: tykio/gromit:v1.7
    outputs:
      conf: ${{ steps.params.outputs.api_conf }}
      db: ${{ steps.params.outputs.api_db }}
      pump: {{`${{ steps.params.outputs.pump }}`}}
      sink: {{`${{ steps.params.outputs.sink }}`}}
      gd_tag: {{`${{ steps.params.outputs.gd_tag }}`}}
      versions: {{`${{ steps.params.outputs.versions }}`}}

    steps:
      - name: set params
        id: params
        env:
          REPO: {{`${{ github.repository }}`}}
          # Cover pull_request_target too
          BASE_REF: {{`${{startsWith(github.event_name, 'pull_request') && github.base_ref || github.ref}}`}}
          TAGS: {{`${{ needs.goreleaser.outputs.tags }}`}}
          IS_PR: {{`${{startsWith(github.event_name, 'pull_request') && 'yes' }}`}}
          IS_TAG: {{`${{startsWith(github.ref, 'refs/tags') && 'yes' }}`}}
          JOB: ui
        run: gromit policy controller --loglevel debug | tee -a "$GITHUB_OUTPUT"

  ui-tests:
    needs: test-controller-ui
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the Github JWT
      contents: read # This is required for actions/checkout
    strategy:
      fail-fast: false
      matrix:
        conf: {{`${{ fromJson(needs.test-controller-ui.outputs.conf) }}`}}
        db: {{`${{ fromJson(needs.test-controller-ui.outputs.db) }}`}}
        pump: {{`${{ fromJson(needs.test-controller-ui.outputs.pump) }}`}}
        sink: {{`${{ fromJson(needs.test-controller-ui.outputs.sink) }}`}}
        node-version: [18.16]
        include:
          - db: postgres15
            markers: "and not sql"   
{{- template "ui-tests" . }}                 
{{  end -}}

  api-tests:
    needs: [goreleaser, test-controller]
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # This is required for requesting the Github JWT
      contents: read    # This is required for actions/checkout
    strategy:
      fail-fast: false
      matrix:
        conf: {{`${{ fromJson(needs.test-controller-api.outputs.conf) }}`}}
        db: {{`${{ fromJson(needs.test-controller-api.outputs.db) }}`}}
        {{ if ne .Name "tyk-pump" -}} pump: {{`${{ fromJson(needs.test-controller-api.outputs.pump) }}`}} {{ end }} {{/* pump array not needed when the repo is pump */}}
        {{ if ne .Name "tyk-sink" -}} sink: {{`${{ fromJson(needs.test-controller-api.outputs.sink) }}`}} {{ end }}
        include:
          - db: postgres15
            markers: "and not sql"
{{- template "api-tests" . }}
{{ end -}} {{/* if repo covered by api-tests */}}

{{- template "smoke-tests" . }}

  sbom:
    needs: goreleaser
    uses: TykTechnologies/github-actions/.github/workflows/sbom.yaml@main
    secrets:
      DEPDASH_URL: ${{`{{ secrets.DEPDASH_URL }}`}}
      DEPDASH_KEY: ${{`{{ secrets.DEPDASH_KEY }}`}}
      ORG_GH_TOKEN: ${{`{{ secrets.ORG_GH_TOKEN }}`}}
