{{define "dockers"}}
{{- $hasDockers := false }}
{{- range $b, $bv := .Branchvals.Builds }}
  {{- if $bv.DHRepo }}
    {{- $hasDockers = true }}
  {{- end }}
{{- end }}
{{- if $hasDockers }}
dockers:
{{- range $b, $bv := .Branchvals.Builds }}
  {{- if $bv.DHRepo }}
    {{- range $a := $bv.Archs }}
      {{- if or (eq $a.Go "amd64") (eq $a.Go "arm64") (eq $a.Go "s390x") }}
  # Build {{$bv.DHRepo}} {{$b}} ({{$a.Go}})
  - ids:
      - {{$b}}-{{$a.Go}}
    image_templates:
      - "{{$bv.DHRepo}}:{{`{{.Tag}}`}}-{{$b}}-{{$a.Go}}"
    build_flag_templates:
      - "--build-arg=PORTS={{$.ExposePorts}}"
      - "--build-arg=BUILD_PACKAGE_NAME={{$bv.BuildPackageName}}"
      - "--platform=linux/{{$a.Go}}"
      - "--label=org.opencontainers.image.created={{`{{.Date}}`}}"
      - "--label=org.opencontainers.image.title={{`{{.ProjectName}}`}}{{if eq $b "fips"}} FIPS{{else if eq $b "ee"}} Enterprise Edition{{end}}"
      - "--label=org.opencontainers.image.revision={{`{{.FullCommit}}`}}"
      - "--label=org.opencontainers.image.version={{`{{.Version}}`}}"
    use: buildx
    goarch: {{$a.Go}}
    goos: linux
    dockerfile: ci/Dockerfile.std
    extra_files:
      - "ci/install/"
      - "README.md"
      - "dist/"
      {{- if (eq $.Name "tyk") }}
      - "LICENSE.md"
      - "apps/app_sample.json"
      - "templates"
      - "middleware"
      - "event_handlers/sample"
      - "policies"
      - "coprocess"
      - "tyk.conf.example"
      {{- end}}
      {{- if (eq $.Name "tyk-pump") }}
      - "LICENSE.md"
      - "pump.example.conf"
      {{- end}}
      {{- if (eq $.Name "tyk-analytics") }}
      - "EULA.md"
      - "portal"
      - "schemas"
      - "webclient/lang"
      - "tyk_config_sample.config"
      {{- end}}
      {{- if (eq $.Name "tyk-sink") }}
      - "EULA.md"
      {{- end}}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
{{end}}
