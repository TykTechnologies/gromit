{{ define "ui-tests" }}
{{ $testsuite := "ui" }}
{{ template "init-e2e-tests" . $testsuite }}
      - name: Install Node.js {{`${{ matrix.node-version }}`}}
        uses: actions/setup-node@v2.4.1
        with:
          node-version: {{`${{ matrix.node-version }}`}}  
      - name: Fix private module deps
        env:
          TOKEN: '{{`${{ secrets.ORG_GH_TOKEN }}`}}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"                    
      - name: Checkout of Dashboard
        uses: actions/checkout@v4
        with:
          ref: {{`${{ github.event.pull_request.head.sha }}`}}
          fetch-depth: 1
          token: {{`${{ secrets.ORG_GH_TOKEN }}`}}
          sparse-checkout: |
            tests/ui
            bin
          submodules: false
      - name: Install test dependecies
        run: |
          npm ci
        working-directory: tests/ui
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: tests/ui
      - name: Execute UI tests
        id: test_execution
        run: |
          # Generate report id
          echo "id=$(date +%s%N)" >> $GITHUB_OUTPUT
          # Run tests        
          npm run test
        working-directory: tests/ui
        env:
          GW_URL: 'https://localhost:8080/'
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          SLACK_AUTH_TOKEN: {{`${{ secrets.UI_SLACK_AUTH_TOKEN }}`}}
          EVENT_TRIGGER: {{`${{ github.event_name }}`}} ({{`${{ github.actor }}`}})
          JOB_RUN_ID: {{`${{ github.run_id }}`}}
          JOB_NAME: tyk-analytics - {{`${{ github.ref }}`}} {{`${{ github.event.head_commit.message }}`}}
          RUN_ID: 'tyk-analytics/{{`${{ github.run_id }}`}}'

      - name: Upload Playwright Test Report to S3
        if: failure() && steps.test_execution.outcome != 'success' && steps.env_up.outcome == 'success'
        run:
          npm run upload_report_to_s3
        env:
          AWS_ACCESS_KEY_ID: {{`${{ secrets.UI_AWS_ACCESS_KEY_ID }}`}}
          AWS_SECRET_ACCESS_KEY: {{`${{ secrets.UI_AWS_SECRET_ACCESS_KEY }}`}}
          RUN_ID: 'tyk-analytics/{{`${{ github.run_id }}`}}'
        working-directory: tests/ui

      - name: Post message to automation team
        if: failure() && steps.test_execution.outcome != 'success' && !github.event.pull_request.draft 
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: '@konrad'
          slack-message: "GitHub build result: {{`${{ job.status }}`}}\n{{`${{ github.event.pull_request.html_url || github.event.head_commit.url }}`}}"
        env:
          SLACK_BOT_TOKEN: {{`${{ secrets.UI_SLACK_AUTH_TOKEN }}`}}

      - name: Share S3 report link into summary
        if: always() && !github.event.pull_request.draft
        run: |
          echo "# :clipboard: S3 UI Test REPORT: {{`${{ matrix.db }}`}}-{{`${{ matrix.conf }}`}}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: {{`${{ steps.test_execution.outcome == 'success' && ':white_check_mark:' || ':no_entry_sign:' }}`}}" >> $GITHUB_STEP_SUMMARY
          echo "- [Link to report](https://tyk-qa-reports.s3.eu-central-1.amazonaws.com/tyk-analytics/{{`${{ github.run_id }}`}}/index.html)" >> $GITHUB_STEP_SUMMARY
  
      - name: Xray update
        if: {{`${{ always() }}`}} && github.event_name != 'pull_request'
        run: |
          ./update_xray.sh
        working-directory: bin
        env:
          TEST: "QA-890"
          STATUS: "{{`${{ steps.test_execution.outcome }}`}}"
          CLIENT_ID: {{`${{secrets.XRAY_CLIENT_ID}}`}}
          CLIENT_SECRET: {{`${{secrets.XRAY_CLIENT_SECRET}}`}}
          BRANCH: {{`${{ github.ref }}`}}                                       
{{ end }}
