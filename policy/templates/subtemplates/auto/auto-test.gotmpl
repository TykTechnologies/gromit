{{ define "auto-test" }}
  test-controller-{{ .test }}:
    if: github.event.pull_request.draft == false
  {{- if and (has "releng" .dot.Branchvals.Features) (ne .flow "nightly") }}
    needs:
      - goreleaser
  {{- end }}
    runs-on: ubuntu-latest
    outputs:
      envfiles: {{`${{ steps.params.outputs.envfiles }}`}}
      pump: {{`${{ steps.params.outputs.pump }}`}}
      sink: {{`${{ steps.params.outputs.sink }}`}}
    steps:
      - name: Set test parameters
        uses: TykTechnologies/github-actions/.github/actions/tests/test-controller@main
        id: params
        with:
          variation: {{`${{ env.VARIATION }}`}}
          base_ref: {{`${{ env.BASE_REF }}`}}
          test_type: {{ .test }}

  {{ .test }}-tests:
    needs:
      - test-controller-{{ .test }}
    {{- if and (has "releng" .dot.Branchvals.Features) (ne .flow "nightly") }}
      - goreleaser
    {{- end }}
    runs-on: ubuntu-latest-m-2
    env:
      XUNIT_REPORT_PATH: {{`${{ github.workspace}}`}}/test-results.xml
{{- if eq .dot.Name "tyk-pro" }}
      BASE_REF: master
{{- end }}
    permissions:
      id-token: write # This is required for requesting the Github JWT
      contents: read # This is required for actions/checkout
    strategy:
      fail-fast: false
      matrix:
        envfiles: {{`${{ fromJson(needs.test-controller-`}}{{ .test }}{{`.outputs.envfiles) }}`}}
        {{- if ne .dot.Name "tyk-pump" }}
        pump: {{`${{ fromJson(needs.test-controller-`}}{{ .test }}{{`.outputs.pump) }}`}}
        {{ end }}
        {{- if ne .dot.Name "tyk-sink" }}
        sink: {{`${{ fromJson(needs.test-controller-`}}{{ .test }}{{`.outputs.sink) }}`}}
        {{ end }}
        {{- if and (ne .dot.Name "tyk-pump") (ne .dot.Name "tyk-sink") }}
        exclude:
          - pump: tykio/tyk-pump-docker-pub:v1.8
            sink: $ECR/tyk-sink:master
          - pump: $ECR/tyk-pump:master
            sink: tykio/tyk-mdcb-docker:v2.4
        {{- end }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1
      - id: ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
      - name: Setup tmate session only in debug mode
        uses: mxschmitt/action-tmate@v3
        if: runner.debug == '1'
        with:
          detached: true
          limit-access-to-actor: true
          # Only {{`${{ github.actor }}`}} has access
          # See https://github.com/mxschmitt/action-tmate#use-registered-public-ssh-keys
{{- if eq .dot.Name "tyk-pro" }}
      - uses: actions/checkout@v4
        with:
          path: auto
          fetch-depth: 1
{{- else }}
      - name: Fetch environment from tyk-pro
        uses: TykTechnologies/github-actions/.github/actions/tests/checkout-tyk-pro@main
        with:
          org_gh_token: {{`${{ github.token }}`}}
{{- end }}
      - name: Set up test environment
        uses: TykTechnologies/github-actions/.github/actions/tests/env-up@main
        id: env_up
        with:
          base_ref: {{`${{ env.BASE_REF }}`}}
          tags: {{`${{ needs.goreleaser.outputs.ee_tags || needs.goreleaser.outputs.std_tags || format('{0}/tyk-ee:master', steps.ecr.outputs.registry) }}`}}
          github_token: {{`${{ secrets.ORG_GH_TOKEN }}`}}
          TYK_DB_LICENSEKEY: {{`${{ secrets.DASH_LICENSE }}`}}
          TYK_MDCB_LICENSE: {{`${{ secrets.MDCB_LICENSE }}`}}

      - name: Choose test code branch
        uses: TykTechnologies/github-actions/.github/actions/tests/choose-test-branch@main
        with:
          test_folder: {{ .test }}
          org_gh_token: {{`${{ secrets.ORG_GH_TOKEN }}`}}
          {{- if eq .flow "nightly" }}
          branch: {{`${{ matrix.envfiles.gwdash }}`}}
          {{- end }}
          
      {{ if eq .test "api" }}
      - name: Run API tests
        uses: TykTechnologies/github-actions/.github/actions/tests/api-tests@main
        id: test_execution
        with:
          user_api_secret: {{`${{ steps.env_up.outputs.USER_API_SECRET }}`}}
      {{ else if eq .test "ui" }}
      - name: Fix private module deps
        env:
          TOKEN: '{{`${{ secrets.ORG_GH_TOKEN }}`}}'
        run: >
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
      - name: Execute UI tests
        uses: TykTechnologies/github-actions/.github/actions/tests/ui-tests@main
        id: test_execution

      - name: Upload UI test report to S3
        uses: TykTechnologies/github-actions/.github/actions/tests/ui-tests-report@main
        if: failure() && steps.test_execution.outcome != 'success' && steps.env_up.outcome == 'success'
        with:
          aws_acces_key_id: {{`${{ secrets.UI_AWS_ACCESS_KEY_ID }}`}}
          aws_secret_access_key: {{`${{ secrets.UI_AWS_SECRET_ACCESS_KEY }}`}}
      {{- end }} {{/* end of if .test */}}

      - name: Generate test reports and collect logs
        uses: TykTechnologies/github-actions/.github/actions/tests/reporting@main
        if: always() && (steps.test_execution.conclusion != 'skipped')
        with:
          report_xml: 'true'
          execution_status: {{`${{ steps.test_execution.outcome }}`}}
{{ end }} {{/* End of auto-test */}}
