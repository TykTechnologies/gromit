name: TestÂ²
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    paths:
{{- if eq .Name "tyk-analytics" }}
      - 'tests/ui/**'
      - 'tests/api/**'
{{- else if eq .Name "tyk-ci" }}
      - 'auto/**'   
{{- end }}
  push:
    branches:
      - master
      - release-*
    paths:
{{- if eq .Name "tyk-analytics" }}
      - 'tests/ui/**'
      - 'tests/api/**'
{{- else if eq .Name "tyk-ci" }}
      - 'auto/**'   
{{- end }}
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
{{- if (eq .Name "tyk-analytics") }} {{/* Need to build tat first */}}
  build-tat:
    runs-on: ubuntu-latest
    outputs:
      tags: {{`${{ steps.metadata.outputs.tags }}`}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install flake for linting
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        working-directory: tests/api
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr
        with:
          mask-password: 'true'
          mask-aws-account-id: 'true'
          
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: {{`${{ steps.ecr.outputs.registry }}`}}/tyk-automated-tests
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=sha,format=long,prefix=
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: tests/api
          file: tests/api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: {{`${{ steps.metadata.outputs.tags }}`}}
          labels: {{`${{ steps.metadata.outputs.labels }}`}}
          cache-from: type=gha
          cache-to: type=gha,mode=max  
{{ end }} {{/* ui-gate on tyk-analytics */}}

{{ $DOT := . }}
{{ range $test := .Branchvals.Tests }}
{{- template "auto-test" (dict "dot" $DOT "test" $test) }}
{{ end }}

{{ if eq .Name "tyk-ci" }}
  release:
    if: {{`${{ startsWith(github.ref, 'refs/tags') }}`}}
    runs-on: ubuntu-latest
    needs:
    {{- range $test := .Branchvals.Tests }}
      - {{ $test }}
    {{- end }}
    permissions:
      contents: write  
    steps:
      - uses: actions/checkout@v3
          
      - name: CI env
        run:
          tar czf ci-env.tgz auto/

      - uses: softprops/action-gh-release@v1
        with:
          token: {{`${{ secrets.ORG_GH_TOKEN }}`}}
          name: {{`${{ github.ref_name }}`}}
          tag_name: {{`${{ github.ref_name }}`}}
          body_path: auto/release.md
          files: ci-env.tgz
{{- end }} {{/* tyk-ci */}}
