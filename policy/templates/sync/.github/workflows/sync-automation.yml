# Generated by: gromit policy
# Generated on: {{ .Timestamp }}

# This workflow should only exist in {{ .SrcBranch }}
# Missing files are silently ignored. Most of the time this is what we want, older repos may not have some files
# If {{ .DestBranch }} does not exist, it will be created

name: Sync automation

on:
  push:
    branches:
      - {{ .SrcBranch }}
    paths:
    {{- range $file := .Files }}
      - {{ $file }}
    {{- end }}

env:
  FILES: {{ populate .Files }}

jobs:
  sync:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch: [ {{ join .DestBranch }} ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{"{{"}} matrix.branch {{"}}"}}
          token: ${{"{{"}} secrets.ORG_GH_TOKEN {{"}}"}}

      - name: sync ${{"{{"}} matrix.branch {{"}}"}} from {{ .SrcBranch }}
        run: |
          git fetch origin {{ .SrcBranch }}
          git config --local user.email "policy@gromit"
          git config --local user.name "Bender"
          for f in $FILES; do 
            git checkout --theirs origin/{{ .SrcBranch }} -- $f || true
          done
          git commit -a -m "[CI] Syncing release automation from {{ .SrcBranch }}"
          git push origin
          echo "::debug::${FILES} syncd for ${{"{{"}} matrix.branch {{"}}"}}"
