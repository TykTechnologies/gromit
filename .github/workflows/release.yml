# goreleaser knows not to publish when the trigger is _not_ a tag

name: Release

on:
  pull_request:
  push:
    tags:
      - v*
    branches:
      - master
    
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
            
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - uses: docker/setup-buildx-action@v3

      - run: make test

      - uses: docker/login-action@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
            
      - uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean ${{ !startsWith(github.ref, 'refs/tags/') && '--snapshot' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_GH_TOKEN }}

      - name: find amd64 linux binary
        id: binary
        run: |
          path=$(jq -rc '.[] | select((.type=="Binary") and (.goos=="linux") and .goarch=="amd64") | .path' dist/artifacts.json)
          echo "path=${path}" >> $GITHUB_OUTPUT
        
      - uses: actions/upload-artifact@v3
        with:
          name: binary-amd64
          path: ${{ steps.binary.outputs.path }}
          retention-days: 1

  doctor:
    needs: goreleaser
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: [tyk, tyk-analytics, tyk-pump, tyk-identity-broker, tyk-sink, portal]
        branch: [master]
        feature: [releng]

    steps:
      - name: checkout ${{matrix.repo}}/${{matrix.branch}}
        uses: actions/checkout@v4
        with:
          repository: TykTechnologies/${{ matrix.repo }}
          ref: ${{ matrix.branch }}
          token: ${{ secrets.ORG_GH_TOKEN }}
          path: ${{ matrix.repo }}
          fetch-depth: 1

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: binary-amd64

      - name: Check for zero diffs
        run: |
          gromit="${{ steps.download.outputs.download-path }}/gromit"
          chmod +x $gromit
          ${{ steps.download.outputs.download-path }}/gromit bundle gen --features ${{ matrix.feature }} --branch ${{matrix.branch}} --repo ${{ matrix.repo }} ${{ matrix.repo }}
          echo "## :hospital: â„ž ${{ matrix.repo }} ${{ matrix.feature }} ${{matrix.branch}}" >> $GITHUB_STEP_SUMMARY
          if $gromit policy diff --colours=false ${{ matrix.repo }} 2>summary 1>diff; then
             echo No treatment required :sunglasses: :thumbsup: >> $GITHUB_STEP_SUMMARY
          else
             echo "::error title=${{ matrix.repo }} ${{ matrix.feature }} ${{matrix.branch}}::$(cat summary)"
             echo '```diff' >> $GITHUB_STEP_SUMMARY
             cat diff >> $GITHUB_STEP_SUMMARY
             echo '```' >> $GITHUB_STEP_SUMMARY
          fi
